/*
 * Copyright (c) 2019-2020 Control-J Pty. Ltd. All rights reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
    ext.kotlin_version = '1.3.70'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.18"
        classpath "digital.wup:android-maven-publish:3.6.2"

    }
}

group 'com.control-j.cjlog'
version '1.1'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "maven-publish"
apply plugin: "signing"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

task javadocJar(type: Jar) {
    from dokka
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation "io.reactivex.rxjava2:rxjava:2.2.3"
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }

    publications {
        mavenJava(MavenPublication) { publication ->
            artifactId = "core"
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'CJLog'
                packaging 'jar'
                description = 'A lightweight, system independent logging facility for multiple destinations'
                url = 'https://github.com/clydebarrow/CJLog'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'clyde'
                        name = 'Clyde Stubbs'
                        url = 'https://github.com/clydebarrow'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/clydebarrow/CJLog.git'
                    developerConnection = 'scm:git:https://github.com/clydebarrow/CJLog.git'
                    url = 'https://github.com/clydebarrow/CJLog'
                }
            }
        }
    }
}
signing {
    sign configurations.archives
    sign publishing.publications.mavenJava
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
dokka {
  outputFormat = 'html'
  outputDirectory = "$projectDir/docs/cjlog"
  includes = ['extra.md']
}

